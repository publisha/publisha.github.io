<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Digital Publishing Hub</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2018-06-10T10:49:45+01:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Chris Jennings</name>
   <email></email>
 </author>

 
 <entry>
   <title>Using Flickr to Generate an Image Gallery</title>
   <link href="http://localhost:4000/flickr/jquery/2018/05/27/using-flickr-to-generate-an-image-gallery/"/>
   <updated>2018-05-27T13:00:00+01:00</updated>
   <id>http://localhost:4000/flickr/jquery/2018/05/27/using-flickr-to-generate-an-image-gallery</id>
   <content type="html">&lt;p&gt;We should all be very grateful that Flickr exists. This is one of the most popular (free if you want) hosting services that is also very sophisticated in the way that it delivers, and categorises images. But there is more; Flickr has an &lt;strong&gt;API&lt;/strong&gt; that enables you yo pull your hosted pictures down to your own web site. I am doing this here (see the rolling banner on the home page and the galleries).&lt;/p&gt;

&lt;h2 id=&quot;what-got-me-started&quot;&gt;What got me started&lt;/h2&gt;

&lt;p&gt;I have a book in my shelf. It is quite old now. It’s called &lt;em&gt;Flickr Hacks&lt;/em&gt; 2006, O’Reilly Publishers, New York.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/Screenshot 2018-01-14 19.30.52.png&quot;&gt;&lt;img src=&quot;/images/Screenshot 2018-01-14 19.30.52.png&quot; alt=&quot;Flickr Hacks - Bausch and Bumgardner&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This book is an unusual O’Reilly book, in that it does not have an engraving of an animal but rather the slide projector. As you can see, it’s an unbranded Kodak Carousel.&lt;/p&gt;

&lt;h2 id=&quot;flickr&quot;&gt;Flickr&lt;/h2&gt;

&lt;p&gt;Flickr has been around for a long time and was launched in 2004&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. It was taken over by Yahoo and is now owned by them. There are millions of users and there are certainly more than 6 billion public photos.&lt;/p&gt;

&lt;p&gt;Enough of the history. The important thing to note is that it is possible to &lt;em&gt;interogate&lt;/em&gt; flickr’s publicly available photo streams and deliver to your own web site.&lt;/p&gt;

&lt;h2 id=&quot;hacking-the-api&quot;&gt;Hacking the API&lt;/h2&gt;

&lt;p&gt;The &lt;em&gt;Flickr Hacks&lt;/em&gt; book is all about mashing-up the content from Flickr. We are very fortunate that the Flickr organisation have made available an API (Application Programming Interface), whereby the photos can be accessed and pushed onto a web page.&lt;/p&gt;

&lt;p&gt;This API was available in 2006 and the book does explore various ways to use images directly from the site, and at the time, I didn’t really exploit the potential; preferring to &lt;a href=&quot;http://www.pagetoscreen.net/lens/category/76&quot; title=&quot;Take a look at some over on pagetoscreen.net&quot;&gt;host photos on my own web site&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;jquery--flexbox-css&quot;&gt;jQuery + FlexBox CSS&lt;/h2&gt;

&lt;p&gt;So, now with jQuery at our finger tips we can build a gallery of images using the Flickr API and styling with CSS flexBox.&lt;/p&gt;

&lt;p&gt;I am now going to point you to the gallery I have built on this site, but before you invoke the link and move away from this page, please note the rolling slide show of images on this home page (I mean the opening page of this site), because those images come from my Flickr account.&lt;/p&gt;

&lt;p&gt;I have 2 galleries in progress at the moment but &lt;a href=&quot;https://publisha.github.io/galleries/bookimages/&quot; title=&quot;Gallery built from Flickr&quot;&gt;please have a look at this one&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/imagegalleryscreen.png&quot;&gt;&lt;img src=&quot;/images/imagegalleryscreen.png&quot; alt=&quot;Here is what it looks like, but do take a look on my site!&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-workflow&quot;&gt;The workflow&lt;/h2&gt;

&lt;p&gt;In your Flickr account set up an album and add some photos to that album. You should put caption information in there if possible.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/addingimagetoflickrealbum.png&quot;&gt;&lt;img src=&quot;/images/addingimagetoflickrealbum.png&quot; alt=&quot;Adding image to Flickr and editing title and description&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-app-garden&quot;&gt;The APP Garden&lt;/h3&gt;

&lt;p&gt;When you are logged in to Flickr you need to find this page:
https://www.flickr.com/services/api/explore/flickr.photosets.getPhotos&lt;/p&gt;

&lt;p&gt;In the fields on the left you need to out in your details. You should find the photoset_id and the user_id on the right.&lt;/p&gt;

&lt;p&gt;You need to get the output in JSON format.&lt;/p&gt;

&lt;p&gt;Now comes the complicated part; you need to get from the very generous Phil Cohen his jquery plugin called &lt;code class=&quot;highlighter-rouge&quot;&gt;fancy-photoset&lt;/code&gt;. You can download the code &lt;a href=&quot;http://phlippers.net/fancy-photoset/&quot; title=&quot;a jquery plugin&quot;&gt;from his site here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You will need to make modifications to the jquery function to pull from the Flickr API those elements that you need. In my case, I wanted the title and description and the large version of the image to use in the popup version of the image. You need to get the appropriate JSON output from Flickr.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/flickreAPI2JSON.png&quot;&gt;&lt;img src=&quot;/images/flickreAPI2JSON.png&quot; alt=&quot;Flickr APP Garden page&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The section of the jquery Flickr function will look like this:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jsonUrl = &quot;https://api.flickr.com/services/rest/?&quot; + &quot;method=flickr.photosets.getPhotos&amp;amp;&quot; + (&quot;api_key=&quot; + options.apiKey + &quot;&amp;amp;&quot;) + (&quot;photoset_id=&quot; + options.photosetId + &quot;&amp;amp;&quot;) + (&quot;user_id=&quot; + options.flickrId + &quot;&amp;amp;&quot;) + &quot;extras=description,url_sq,url_t,url_s,url_m,url_o&amp;amp;&quot; + &quot;format=json&amp;amp;jsoncallback=?&quot;;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-styling-of-the-gallery&quot;&gt;The Styling of the Gallery&lt;/h3&gt;

&lt;p&gt;The gallery is styled with flex CSS. The gallery block is a list with each image as a list item.  The essential CSS for this looks like this:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nf&quot;&gt;#gallery&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-webkit-box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-ms-flexbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-webkit-box-orient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;horizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-webkit-box-direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;-ms-flex-flow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;nl&quot;&gt;flex-flow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-ms-flex-pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-around&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;#gallery&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;list-style-type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;silver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;vertical-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* flex-basis: 200px; */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-webkit-box-flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;-ms-flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Flickr&quot; title=&quot;Have a look at Wikipedia and make a donation while you're there.&quot;&gt;Wikipedia&lt;/a&gt; will give you a brief history. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Video across a 2 page spread</title>
   <link href="http://localhost:4000/indesign/epub/html/2018/04/09/spread-video-fxl-epub/"/>
   <updated>2018-04-09T18:02:00+01:00</updated>
   <id>http://localhost:4000/indesign/epub/html/2018/04/09/spread-video-fxl-epub</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;Updated with a javascript solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is an issue when video in a fixed layout ePub spans across 2 pages. This situation arises when you have 2 page spreads and you are converting to landscape. What happens is the video only really plays one half, even though, at first the video appears to be available full width.&lt;/p&gt;

&lt;h2 id=&quot;there-are-really-2-videos-one-on-each-half&quot;&gt;There are really 2 videos (one on each half)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/videoover2_broke.png&quot;&gt;&lt;img src=&quot;/images/2017/03/videoover2_broke.png&quot; alt=&quot;In iBooks, the video is split&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you export to the fixed-layout ePub from InDesign – and you choose the &lt;code class=&quot;highlighter-rouge&quot;&gt;Convert Spread to Landscape&lt;/code&gt; option. The process takes the pair of pages and creates one XHTML file (in the ePub package) with a viewport dimension based on the overall width of 2 pages. But, it also creates a 2 divisions with a width obtained from the width of the page. Inside these &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s, it puts a copy of the video; there are 2 videos on the ePub page.&lt;/p&gt;

&lt;h2 id=&quot;can-we-fix&quot;&gt;Can we fix?&lt;/h2&gt;

&lt;p&gt;Yes, but only by editing the XHTML inside the ePub package!&lt;/p&gt;

&lt;p&gt;Before we go ahead and show those changes you are advised to keep the spread where the video sits very simple; remove page numbers and headers and any empty text boxes that are sitting around on those pages.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: When you edit the XHTML inside the ePub package you will lose the ability to &lt;em&gt;round-trip&lt;/em&gt; to InDesign, so leave these changes to the last in your workflow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;why-do-we-need-to-edit-the-xhtml&quot;&gt;Why do we need to edit the XHTML?&lt;/h2&gt;

&lt;p&gt;Blame Adobe! When the ePub is exported to fixed-layout specifying &lt;code class=&quot;highlighter-rouge&quot;&gt;Convert Spread to Landscape&lt;/code&gt; a single XHTML document is created for the pair of pages, however, a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; for each page is created with &lt;em&gt;inline styling&lt;/em&gt; but &lt;strong&gt;no&lt;/strong&gt; id or class name. &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&quot;here-are-the-steps-then&quot;&gt;Here are the steps then.&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The spread where you have the video needs to be simplified; that is, get rid of page numbers, headers and even empty text frames. The reason for this, is that you will be editing the XHTML, and you want to keep this simple!&lt;/li&gt;
  &lt;li&gt;You will need to unpack the ePub after you have exported.&lt;/li&gt;
  &lt;li&gt;You now need to find the XHTML file that contains the video.&lt;/li&gt;
  &lt;li&gt;You now need to make 2 changes to this file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Look at this line:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=792,height=594&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Take a note of the width (yours may be different to mine). Now &lt;strong&gt;change&lt;/strong&gt; the width on the first &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, because this will have a width that is half of the width above; You see that this is an inline CSS - this is why we cannot change in our own CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/editHTML2videos.png&quot;&gt;&lt;img src=&quot;/images/2017/03/editHTML2videos.png&quot; alt=&quot;This shows the HTML where the video is displayed across 2 pages&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is mine:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-CSS&quot;&gt;&amp;lt;div style=&quot;position:absolute;
overflow:hidden;
left:0px;
top:0px;
-webkit-transform:translate(0.00px,0.00px);
-ms-transform:translate(0.00px,0.00px);
transform:translate(0.00px,0.00px);
width:396.00px;
height:594.00px;&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The width should be changed from &lt;code class=&quot;highlighter-rouge&quot;&gt;396.00px&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;792px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The next change is to hide the second &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. Find the second block that also has a width set to half the overall viewport width and add (within the inline style):&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;display:none;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;autoplaying-the-video&quot;&gt;Autoplaying the Video&lt;/h2&gt;

&lt;p&gt;InDesign does provide a tick box on the media panel to play on page load. This effectively gets the video going straight away. In this situation there is a danger that using the above method to display the video fully across the spread may result in the video playing twice, and with sound this may result in an unpleasant echo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/04/autoplayvideo.png&quot;&gt;&lt;img src=&quot;/images/2017/04/autoplayvideo.png&quot; alt=&quot;The play on page load tick box&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;how-to-solve-this&quot;&gt;How to solve this?&lt;/h3&gt;

&lt;p&gt;By simply adding &lt;code class=&quot;highlighter-rouge&quot;&gt;display:none;&lt;/code&gt; we have hidden the second copy of the video, but it will still play if told to do so with ‘autoplay’.&lt;/p&gt;

&lt;p&gt;We could remove the ‘autoplay’ in the HTML for the video.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;video&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_idVideo000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;poster=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/80.png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autoplay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;autoplay&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;video/msnd01.mp4&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;video/mp4&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;However, this is not enough, because InDesign has used javascript to start the video &lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; and you will need to disable for second video by removing this:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mediaOnPageLoadActions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;onMediaStart(selfContainerID,0.00,0);&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I suppose you might just as well delete all of the last &amp;lt;div&amp;gt; or use HTML comment tags to remove.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Any of these changes will be reversed if you re-export from InDesign, so you should only do this at the end of your workflow or copy this code somewhere and paste back in at the end.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;It may be possible to use javascript to change the markup on the page dynamically and thereby allowing us to change this even if we have made further edits in InDesign. Let me know if you find a way. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;The reason that there is javascript to autoplay the video rather than just using ‘autoplay’ is that Apple iOS devices do not support the HTML5 video autostart attribute. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Reading Progress Indicator</title>
   <link href="http://localhost:4000/html/css/epub/2017/08/14/reading-progress/"/>
   <updated>2017-08-14T17:07:00+01:00</updated>
   <id>http://localhost:4000/html/css/epub/2017/08/14/reading-progress</id>
   <content type="html">&lt;p&gt;Some time ago I wrote a post over on &lt;a href=&quot;http://www.pagetoscreen.net/journal/item/page_numbers&quot; title=&quot;read this piece from a while ago&quot;&gt;pagetoscreen.net&lt;/a&gt; about a progress bar in a fixed-layout eBook. In that article I also made a link to a web site that spoke about implementing the progress bar in HTML5.&lt;/p&gt;

&lt;p&gt;More recently, I was grateful to have been shared a link to an article by the very same &lt;a href=&quot;https://css-tricks.com/reading-position-indicator/&quot; title=&quot;Reading Position Indicator&quot;&gt;Pankaj Parashar&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The idea is that when scrolling through a long article in a web browser, the scroll bar on the right is not really a strong enough indicator to the user, as to the amount of text that has been read, and how much remains.&lt;/p&gt;

&lt;p&gt;Some discussions do suggest that the usual scroll bar is enough, but, there again, the scrollbar disappears when the current window is not active. Of course, this varies over different browsers and platforms.&lt;/p&gt;

&lt;p&gt;Pankaj Parashar’s article demonstrates the indicator at the top of the current window, but I agreed with some comments that this might be mistaken for some &lt;em&gt;content still loading&lt;/em&gt;, so I have implemented on this web site at the bottom of the window.&lt;/p&gt;

&lt;p&gt;You will observe this &lt;strong&gt;reading position indicator&lt;/strong&gt; on some pages of this web site, although, I suspect, not on the article that you are reading, because it is (after all), rather short. The indicator is made to be very slightly transparent, to show the content underneath. I have also made the colour suitably adjusted to blend nicely with the overall scheme of the site.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Page Size Issues in fixed-layout ePub</title>
   <link href="http://localhost:4000/2017/03/30/from-print-to-fixed-layout-epub-page-size/"/>
   <updated>2017-03-30T11:37:00+01:00</updated>
   <id>http://localhost:4000/2017/03/30/from-print-to-fixed-layout-epub-page-size</id>
   <content type="html">&lt;p&gt;Following on from page size in the reflowable eBook, how about the fixed-layout eBook after it has been created as a print book? So you have used InDesign to create a wonderful printed book of a Shakespeare play, and you chose a standard page size (my example is: 216mm x138mm). Now when you make the fixed layout eBook from the spreads there might be a few observable problems.&lt;/p&gt;

&lt;h2 id=&quot;proportion&quot;&gt;Proportion&lt;/h2&gt;

&lt;p&gt;Our print book spreads will become landscape in the fixed-layout eBook. So, we will get the following proportions:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;width:138 x 2 = 278&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;height = 216&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Proportion = 216/278 = 0.7777&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On a computer running Apple iBooks or any other eReader, the proportion is
not really significant because all computer displays vary in proportion. However, on a tablet such as the iPad the proportion is specifically 6x8 or 0.75. So, we need to modify the size of the pages in the InDesign file very slightly; keeping the width of the pages, we take the width of the spread and multiply by 0.75 and we get 208.5. So we lose about 8mm in the height.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/ipad_edgerevealed.jpg&quot;&gt;&lt;img src=&quot;/images/2017/03/ipad_edgerevealed.jpg&quot; alt=&quot;Here we see that the page size does not exactly fit on the iPad&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;theory-and-practice&quot;&gt;Theory and Practice&lt;/h2&gt;

&lt;p&gt;The above scenario takes a book designed for print and makes one adjustment in a attempt to resolve the proportion riddle, however, in practise there may still be gaps and mysterious white lines.&lt;/p&gt;

&lt;h3 id=&quot;its-all-about-the-units&quot;&gt;It’s all about the units&lt;/h3&gt;

&lt;p&gt;The numbers that we refer to above are in millimetres because in Europe we tend to use metric units to measure page sizes.&lt;/p&gt;

&lt;p&gt;When InDesign exports the fixed-layout eBook, it needs to make a conversion from real-world units (millimetres) to pixels. If we take a peak inside the ePub package at one of the &lt;code class=&quot;highlighter-rouge&quot;&gt;XHTML&lt;/code&gt; files we see that:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;meta name=&quot;viewport&quot; content=&quot;width=782,height=591&quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This tells the ereader that the size is 782x591. The proportion, therefore is &lt;code class=&quot;highlighter-rouge&quot;&gt;0.755754475703325&lt;/code&gt; - very slightly wrong! The height should be: &lt;code class=&quot;highlighter-rouge&quot;&gt;586.5&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;lets-not-edit-the-epub&quot;&gt;Let’s not edit the ePub&lt;/h3&gt;

&lt;p&gt;We don’t need to edit the XHTML code inside the ePub. No, we just need to adjust the InDesign file to use pixel units. Here’s how:&lt;/p&gt;
&lt;h3 id=&quot;unit-preferences&quot;&gt;Unit Preferences&lt;/h3&gt;

&lt;p&gt;In Indesign, go to the preferences panel and find the &lt;code class=&quot;highlighter-rouge&quot;&gt;units and increments&lt;/code&gt; section. Change the Ruler units for both vertical and horizontal to &lt;strong&gt;pixels&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/changetheunitstopixels.png&quot;&gt;&lt;img src=&quot;/images/2017/03/changetheunitstopixels.png&quot; alt=&quot;Change from millimetres to pixels&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;page-size&quot;&gt;Page size&lt;/h3&gt;

&lt;p&gt;Now go to File&amp;gt;Document setup and see that the page size is now an untidy fraction of pixels (391.181 x 591.024). Not nice!&lt;/p&gt;

&lt;p&gt;We need to do some adjustment to these numbers to get a 3/4 proportion and hopefully exact pixels numbers. Pixels are tiny little units so this should not impact our designs too much.&lt;/p&gt;

&lt;p&gt;The result is a page width of &lt;code class=&quot;highlighter-rouge&quot;&gt;396 pixels&lt;/code&gt; and page height of &lt;code class=&quot;highlighter-rouge&quot;&gt;594 pixels&lt;/code&gt;. When we add 2 pages together the landscape becomes &lt;code class=&quot;highlighter-rouge&quot;&gt;792 x 594 = 8 x 6&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;document-set-up-or-pages-size&quot;&gt;Document set up or pages size&lt;/h2&gt;

&lt;p&gt;You can go back to the File&amp;gt;Document setup and change the page size. This will work, however, you can use the Page Tool on the tool palette and select all master pages in the Pages panel. You then can control the reference point for the change to happen (choose the centre top).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/documentsetup.png&quot;&gt;&lt;img src=&quot;/images/2017/03/documentsetup.png&quot; alt=&quot;In the documents setup we now need to adjust to a whole pixel number.&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then you need to apply the master pages to all pages and also set the page size in the document setup panel.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Page size in InDesign for eBook?</title>
   <link href="http://localhost:4000/indesign/epub/css/2017/03/24/page-size-in-indesign-for-ebook/"/>
   <updated>2017-03-24T15:48:00+00:00</updated>
   <id>http://localhost:4000/indesign/epub/css/2017/03/24/page-size-in-indesign-for-ebook</id>
   <content type="html">&lt;p&gt;We’re creating a &lt;strong&gt;reflowable&lt;/strong&gt; eBook in InDesign. We’re not planning a print book at all - just straight to an eBook; what size page should we choose when we use Adobe InDesign?&lt;/p&gt;

&lt;h2 id=&quot;why-should-you-care&quot;&gt;Why should you care?&lt;/h2&gt;

&lt;p&gt;When we create an eBook (reflowable) users get to change the font size. This is how it is in all eReader devices although the range of sizes varies considerably.&lt;/p&gt;

&lt;p&gt;Let’s use the iPad with Apple’s iOS as an example. Let’s have a look at iBooks (the standard app on the iPad for viewing eBooks).&lt;/p&gt;

&lt;h2 id=&quot;ibooks&quot;&gt;iBooks&lt;/h2&gt;

&lt;p&gt;On any MAC with iBooks, a reflowable eBook provides the user with a font size ‘adjuster’ symbolised as a small and large capital &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;. You can see the image alongside here.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/ibooksfontsize.png&quot;&gt;&lt;img src=&quot;/images/2017/03/ibooksfontsize.png&quot; alt=&quot;The appearance controller for iBooks on the MAC&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The range of choices is extreme: There are 11 steps from when the little &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; is greyed out to when the large &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; is greyed out. As you see from the nest image here, the large size is - well, kind of ridiculous.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/ibooksenlargedtext.png&quot;&gt;&lt;img src=&quot;/images/2017/03/ibooksenlargedtext.png&quot; alt=&quot;The largest text size with iBooks&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-target-size-for-the-body-text-font&quot;&gt;The target size for the body text font?&lt;/h2&gt;

&lt;p&gt;Whatever you think you want, you may not get it! The problem is that the reader may have adjusted the font size when they read another book before yours, so you don’t know what they will see at first.&lt;/p&gt;

&lt;p&gt;When you create a reflowable ePub from InDesign, the relationship between the InDesign page and what you see in the ePub (I’m using Apple’s iBooks here) is non existent; that is, the page size in InDesign is not relevant. What is relevant is the font size. Let me explain further by showing some simple sample pages.&lt;/p&gt;

&lt;h2 id=&quot;point-size-to-css-em&quot;&gt;Point size to CSS em&lt;/h2&gt;

&lt;p&gt;Let’s focus on the body text. By that I mean the main paragraphs; not the headings or list items or captions. Just the paragraphs.&lt;/p&gt;

&lt;p&gt;You must have a point size for this text. InDesign expects you to have a value for the point size. The default point size is &lt;code class=&quot;highlighter-rouge&quot;&gt;12pts&lt;/code&gt;. This is how you should find it if you use the &lt;code class=&quot;highlighter-rouge&quot;&gt;[Basic Paragraph]&lt;/code&gt; style.&lt;/p&gt;

&lt;p&gt;When you export to the ePub Reflowable format, the CSS that controls the font size will be:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.basic-paragraph&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In other words the default font size for the HTML element &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-about-the-page-size-then&quot;&gt;What about the page size then?&lt;/h2&gt;

&lt;p&gt;If you accept that the reflowable ePub will not necessarily look &lt;em&gt;exactly&lt;/em&gt; like the InDesign page, then you can make the page size whatever you want, but –— maybe we really want to see the InDesign page layout so that it &lt;em&gt;almost nearly&lt;/em&gt; reflects the view that will be seen in the eBook.&lt;/p&gt;

&lt;p&gt;To establish this, we need to conduct some experiments.&lt;/p&gt;

&lt;h3 id=&quot;starting-a-new-indesign-document-beware-of-the-intent-trap&quot;&gt;Starting a New InDesign document (beware of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Intent&lt;/code&gt; trap)&lt;/h3&gt;

&lt;p&gt;You might be tempted, when creating a new InDesign document to select &lt;code class=&quot;highlighter-rouge&quot;&gt;Intent&lt;/code&gt; and choose &lt;code class=&quot;highlighter-rouge&quot;&gt;Mobile&lt;/code&gt;, and then choose &lt;code class=&quot;highlighter-rouge&quot;&gt;iPad&lt;/code&gt;. Depending on which you choose, you might get a page size of 1024x768 pixels. If you have a body text font size of &lt;code class=&quot;highlighter-rouge&quot;&gt;12pts&lt;/code&gt;, then your text will appear very small, when working with InDesign. See the image to the left.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/ipadsize12pts.png&quot;&gt;&lt;img src=&quot;/images/2017/03/ipadsize12pts.png&quot; alt=&quot;This portrait page is 768 wide x 1024 tall&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s try something else; if we imagine that the &lt;em&gt;spread&lt;/em&gt; needs to be 1024 pixels together then the page should be 768 pixels tall and 512 pixels wide.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/pagesize768512.png&quot;&gt;&lt;img src=&quot;/images/2017/03/pagesize768512.png&quot; alt=&quot;View in InDesign of 12pt text on 512x768 page&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we see what the 12pt text looks like in InDesign. Not bad. Good measure with a manageable page size.&lt;/p&gt;

&lt;p&gt;How near is this to the eventual view in the eBook. We need to export as reflowable and then look at this in Apple’s iBooks, but with the text size set one size larger than the smallest.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/pagesize768512_epub2.png&quot;&gt;&lt;img src=&quot;/images/2017/03/pagesize768512_epub2.png&quot; alt=&quot;Here we compare the eBook with what we see in InDesign.&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can continue to try other options until the best choice is found; let’s just see a different size in InDesign. This time we choose for Web Intent and choose the &lt;code class=&quot;highlighter-rouge&quot;&gt;640 x 480&lt;/code&gt; size.&lt;/p&gt;

&lt;p&gt;We have InDesign show us the page at &lt;code class=&quot;highlighter-rouge&quot;&gt;actual size&lt;/code&gt; and we compare this to iBooks (actual size) but enlarge the text up one notch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/640480_iBook_2ndstep.png&quot;&gt;&lt;img src=&quot;/images/2017/03/640480_iBook_2ndstep.png&quot; alt=&quot;InDesign actual size and iBooks with text up one notch&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;The reflowable eBook should have the default size for for body text (that means 1em or 12pts), so that users can increase the text size if they prefer. In fact, Apple recommends that the there is &lt;strong&gt;no&lt;/strong&gt; text size set for the body text, so that it automatically defers to the default size. InDesign does not give us this option, so setting at 12pts is the best choice.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: You can, of course post-edit the ePub and remove the font-size CSS from the style rules for your body text.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After much experimenting then, we find that in a situation where we are creating a reflowable ePub from InDesign &lt;em&gt;without wanting the print version first&lt;/em&gt; then the best page size choice is &lt;strong&gt;480 pixels wide and 640 pixels high after selecting the intent for web&lt;/strong&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Writing with Atom</title>
   <link href="http://localhost:4000/markdown/2017/03/03/writing-with-atom/"/>
   <updated>2017-03-03T15:25:00+00:00</updated>
   <id>http://localhost:4000/markdown/2017/03/03/writing-with-atom</id>
   <content type="html">&lt;p&gt;I just think that &lt;a href=&quot;https://atom.io&quot; title=&quot;Get Atom for yourself&quot;&gt;Atom&lt;/a&gt; is a brilliant text editor, and I now use it all the time. It’s good for code / HTML, CSS and all that, but it is also really good for writing and here’s why.&lt;/p&gt;

&lt;h2 id=&quot;markdown&quot;&gt;Markdown&lt;/h2&gt;

&lt;p&gt;You need to learn it. But so easy. And anyway Atom can help.&lt;/p&gt;

&lt;p&gt;I won’t repeat here what you can find online about Markdown, like who invented it (&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot; title=&quot;Take a look here&quot;&gt;John Gruber&lt;/a&gt;) and what it &lt;a href=&quot;http://commonmark.org/help/&quot; title=&quot;Get the lowdown&quot;&gt;actually means&lt;/a&gt;, and &lt;a href=&quot;https://www.google.co.uk/?gfe_rd=cr&amp;amp;ei=aYy5WJfXMIOFaIP7pqAM#q=love+markdown&quot; title=&quot;Google helps here&quot;&gt;who loves it&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;atom-can-help&quot;&gt;Atom Can Help&lt;/h2&gt;

&lt;p&gt;As you will see, the point of Markdown is that it keeps you focussed on the words and not the style. It also keeps you disciplined to use a limited number of structural elements in your writing; headings (h1 - h6), paragraph, lists and inline emphasise with &lt;strong&gt;bold&lt;/strong&gt; and &lt;em&gt;italics&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So, once you learn how to tag these elements it all gets as easy as falling off a log. However, if you need that extra bit of support (a lifejacket I suppose), then you can download the Markdown writer package and toolbar to extend Atom; then you get a line-up of icons that will make life even easier.&lt;/p&gt;

&lt;h2 id=&quot;but-what-does-it-look-like-when-im-done&quot;&gt;But what does it look like when I’m done?&lt;/h2&gt;

&lt;p&gt;OK, so you want to see the results? Again, just add the Markdown previewer to Atom, and you see the results right alongside. Check out the screenshot alongside here.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/Screenshot 2017-03-03 15.46.14.png&quot;&gt;&lt;img src=&quot;/images/2017/03/Screenshot 2017-03-03 15.46.14.png&quot; alt=&quot;Markdown previewer shows this text&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;ok-but-what-else-can-i-do-with-the-text&quot;&gt;OK. But what else can I do with the text?&lt;/h2&gt;

&lt;p&gt;Alight, I know. Your publisher wants a Word file.&lt;/p&gt;

&lt;p&gt;No problem. Just follow these steps and all will be well with the world:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Download a copy of Pandoc (a universal text converter) &lt;a href=&quot;http://pandoc.org&quot; title=&quot;Brilliant work&quot;&gt;from here&lt;/a&gt; and install it.&lt;/li&gt;
  &lt;li&gt;Extend Atom with the Pandoc-Convert package&lt;/li&gt;
  &lt;li&gt;When ready to convert, use the Atom command palette and type &lt;code class=&quot;highlighter-rouge&quot;&gt;convert&lt;/code&gt; and then find &lt;code class=&quot;highlighter-rouge&quot;&gt;docx&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;what-about-just-writing-with-no-distractions&quot;&gt;What about just writing with no distractions?&lt;/h2&gt;

&lt;p&gt;What you see in the above example is a little more complex that the normal writing, since i have lots of links and images. But I didn’t write that code; I just tapped the link icon on the toolbar.&lt;/p&gt;

&lt;h3 id=&quot;zen&quot;&gt;Zen&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/Screenshot 2017-03-03 16.29.05.png&quot;&gt;&lt;img src=&quot;/images/2017/03/Screenshot 2017-03-03 16.29.05.png&quot; alt=&quot;See no distractions&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try the Zen package to add to Atom, and then with a hotkey combination you can get to your writing without any distractions. You won’t even see Facebook.&lt;/p&gt;

&lt;h3 id=&quot;like-what-you-see-or-not&quot;&gt;Like what you see? Or Not?&lt;/h3&gt;

&lt;p&gt;You can change the theme and get an entirely different environment.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/03/Screenshot 2017-03-03 16.43.40.png&quot;&gt;&lt;img src=&quot;/images/2017/03/Screenshot 2017-03-03 16.43.40.png&quot; alt=&quot;Youcan choose a light theme if you prefer&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;and-web-sites&quot;&gt;And web sites&lt;/h2&gt;

&lt;p&gt;Well that a whole different story, but this web site is entirely created and edited with Atom. I use a static web generator called Jekyll; Atom can directly create content and load up to the site repository when ready.&lt;/p&gt;

&lt;p&gt;Like now!&lt;/p&gt;

&lt;p&gt;Thanks for reading…&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>From Apple's Pages to Markdown</title>
   <link href="http://localhost:4000/conversion/markdown/2017/02/10/frompages2markdown-md/"/>
   <updated>2017-02-10T11:40:00+00:00</updated>
   <id>http://localhost:4000/conversion/markdown/2017/02/10/frompages2markdown-md</id>
   <content type="html">&lt;p&gt;I have a lot of documents authored with Apple’s Pages. I wanted to convert these to markdown texts with the images (mostly screen grabs). The Pages file format is a proprietary format, and so we are dependent on the limited export features that the program itself provides. So how can we do this?&lt;/p&gt;

&lt;h2 id=&quot;apple-pages&quot;&gt;Apple pages&lt;/h2&gt;

&lt;p&gt;I think &lt;em&gt;pages&lt;/em&gt; is a very nice word processor and I have been using for some time to build documents for my students, to either print out or convert to PDF for delivery on our Moodle pages.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/02/pagessample.png&quot;&gt;&lt;img src=&quot;/images/2017/02/pagessample.png&quot; alt=&quot;Here is a sample from a Pages document.&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But I don’t want to print this type of material anymore. Beside, I need to update every year. Making version changes needs to happen more frequently, these documents really need to be delivered as web pages. Editing (and creating new pages) is better done with a markdown text editor.&lt;/p&gt;

&lt;h2 id=&quot;the-workflow&quot;&gt;The workflow&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Pages&lt;/em&gt; is good at giving you options for export. You can export to PDF, Word, Plain text and ePub. But, you can’t export to HTML or markdown.&lt;/p&gt;

&lt;p&gt;The challenge then was to take the Pages document and recreate as markdown for use here on this site, so the pages can be easily maintained.&lt;/p&gt;

&lt;h2 id=&quot;pandoc-to-the-rescue&quot;&gt;Pandoc to the rescue&lt;/h2&gt;

&lt;p&gt;I just love this Pandoc. Thanks to &lt;a href=&quot;http://johnmacfarlane.net/&quot; title=&quot;Read about John MacFarlane&quot;&gt;John Macfarlane&lt;/a&gt;, a Professor of Philosophy at the University of California, we can convert just about any document format to any other with this universal document converter.&lt;/p&gt;

&lt;p&gt;You can read the &lt;a href=&quot;http://pandoc.org&quot; title=&quot;Take a look at the details&quot;&gt;details here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pandoc is great but it does &lt;strong&gt;not&lt;/strong&gt; offer Apple’s Pages as a source file format, so we need to use the Microsoft Word format as an interim. Here is what we do once we have Pandoc installed.&lt;/p&gt;

&lt;p&gt;Export from pages to Word (make sure to use docx - the default)
Locate the file just exported in the finder and change directory to there.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;documents/myfles
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; pandoc &lt;span class=&quot;nt&quot;&gt;--wrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;none &lt;span class=&quot;nt&quot;&gt;--extract-media&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;images somefile.docx
&lt;span class=&quot;go&quot;&gt; -o mynewfile.md
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here is an explanation of this terminal command:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;first we change into the folder where our Word document has been saved&lt;/li&gt;
  &lt;li&gt;we now use pandoc with these parameters:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wrap=none&lt;/code&gt; tells pandoc to not wrap the text that it finds. In other words, allow the text to flow except where there are specific paragraph breaks&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;extract-media=images&lt;/code&gt; will pull the images out of the Word document and put them into a folder called images. This will be &lt;em&gt;inside&lt;/em&gt; a media folder that pandoc creates automatically.&lt;/li&gt;
      &lt;li&gt;then we have the input file followed by the output needed. The &lt;code class=&quot;highlighter-rouge&quot;&gt;.md&lt;/code&gt; extension tells pandoc to create a markdown file.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then we have a markdown file and then all of the images from the Word document, will be put into the images folder (inside a media folder). The images will be renamed &lt;em&gt;image1.png&lt;/em&gt;, &lt;em&gt;image2.png&lt;/em&gt; etc (if they were originally png files) or &lt;em&gt;image1.jpg&lt;/em&gt; if they were originally JPEG files.&lt;/p&gt;

&lt;h2 id=&quot;the-markdown-file&quot;&gt;The Markdown file&lt;/h2&gt;
&lt;p&gt;The markdown file will now need some editing. Here is what a portion looks like:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;Extracting XML from InDesign depends on a number of factors, but if we
successfully achieve our goal then we can be pleased that we have styled
all of our content and mapped these styles to our document structure.
&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_Toc1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anchor&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;What is XML and why do we want
it?
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The reason that we are not seeing markdown headings with &lt;code class=&quot;highlighter-rouge&quot;&gt;##&lt;/code&gt; is because our pages document did not have named styles that could be converted. Not perfect, but we know that any span tag like this one is a heading, so we simply use a GREP search and replace like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-grep&quot;&gt;&amp;lt;span id=&quot;.+?&quot; class=&quot;anchor&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Replaced with &lt;code class=&quot;highlighter-rouge&quot;&gt;## &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can remove the table of contents.&lt;/p&gt;

&lt;p&gt;More GREP search and replace, will then help to build the image links with the correct structure and image location.&lt;/p&gt;

&lt;p&gt;The image links have a width and height set, so we can easily replace this too.&lt;/p&gt;

&lt;p&gt;Finally, we need to add our ALT tag text for each image.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Validation</title>
   <link href="http://localhost:4000/html/2017/02/05/validation/"/>
   <updated>2017-02-05T15:39:00+00:00</updated>
   <id>http://localhost:4000/html/2017/02/05/validation</id>
   <content type="html">&lt;p&gt;Everything needs to be perfect for it to work in the digital domain. Or does it? Can our screens forgive our little markup errors?&lt;/p&gt;

&lt;h2 id=&quot;checking-for-errors-we-have-to-do-it-so-often&quot;&gt;Checking for Errors. We have to do it so often!&lt;/h2&gt;

&lt;p&gt;If you create web sites, apps or eBooks then you are sure to have a few mark-up errors. So how can we check for errors?&lt;/p&gt;

&lt;h3 id=&quot;html&quot;&gt;HTML&lt;/h3&gt;

&lt;p&gt;In the world &lt;em&gt;wild&lt;/em&gt; web there are several flavours of HTML markup in use, and in a previous post we talked of HTML5 and XHTML. At one time it was possible to be able to choose your favourite from HTML3, HTM4 and even transitional versions.&lt;/p&gt;

&lt;p&gt;But what does it mean to have different versions? To a certain extent this is really a chronological thing. As you would expect, as time goes by, things improve and new versions make the experience of rendering HTML into a web page gets better. But it wasn’t always so straightforward because web browsers have often interpreted the HTML tags and stylesheets (CSS) in different ways. Oftentimes a web developer would start off by making the markup valid (according to the rules) but then the web browser would deliver the unexpected and hacks would need to be applied.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;forgiveness-is-a-dangerous-beautiful-thing&quot;&gt;Forgiveness is a &lt;del&gt;dangerous&lt;/del&gt; beautiful thing&lt;/h2&gt;

&lt;p&gt;The latest iteration of HTML is known as &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML5&lt;/code&gt; although, in fact some have suggested that we don’t need versions anymore. We’re beyond that now. It’s just HTML. Anyway, HTML5 doesn’t really replace earlier versions, it just builds on them. With HTML5 you get the ability to use some special tags that had previously been needed and were made to work in a ‘roundabout’ way:&lt;/p&gt;

&lt;p&gt;Previously:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navigation&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
... some menu items
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we can just use:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
... some menu items
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But also, HTML5 is very forgiving, because you can leave tags unclosed and the browser is supposed to take a jolly good guess at what is supposed to be.&lt;/p&gt;

&lt;h2 id=&quot;doctypes&quot;&gt;Doctypes&lt;/h2&gt;

&lt;p&gt;In a pre-HTML5 world, web pages needed a &lt;em&gt;doctype&lt;/em&gt; at the head of the markup, so that if you really wanted to deliver to a particular HTML version, the browser &lt;em&gt;was supposed to&lt;/em&gt; read that first to interpret correctly. Maybe it did, maybe it didn’t (I won’t go into &lt;strong&gt;quirks&lt;/strong&gt; mode).&lt;/p&gt;

&lt;p&gt;Still, doctypes are significant if you need to validate the markup (stay with me here, because we &lt;strong&gt;do&lt;/strong&gt; need to validate for the ePub).&lt;/p&gt;

&lt;p&gt;Let’s have a look at some doctype declarations:&lt;/p&gt;

&lt;p&gt;Here is a transitional one:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here is a strict one:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here is HTML5, pure and simple, no references to data held on the web:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-can-we-validate&quot;&gt;How can we validate?&lt;/h2&gt;

&lt;h3 id=&quot;html-1&quot;&gt;HTML&lt;/h3&gt;
&lt;p&gt;You can validate your web page by &lt;a href=&quot;https://validator.w3.org/nu/&quot; title=&quot;The online validator&quot; target=&quot;_blank&quot;&gt;going to this web site&lt;/a&gt; and putting in the a link to the file.&lt;/p&gt;

&lt;p&gt;There are several options, but be aware that the validation process needs to know what HTML version you are using, and it gets this from the DOCTYPE.&lt;/p&gt;

&lt;p&gt;All being well you should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/02/validation1.png&quot;&gt;&lt;img src=&quot;/images/2017/02/validation1.png&quot; alt=&quot;We succesfully validated this XHTML file&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To validate the CSS &lt;a href=&quot;https://jigsaw.w3.org/css-validator/&quot; title=&quot;Validate the CSS&quot; target=&quot;_blank&quot;&gt;go to the Jigsaw validator here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The sample page that I have produced has validated but we need to aware of a few things:&lt;/p&gt;

&lt;p&gt;First the web page must be named with .xhtml. This will inform the validator that we are using XHTML rather than just plain HTML.&lt;/p&gt;

&lt;h3 id=&quot;why-xhtml-then&quot;&gt;Why XHTML then?&lt;/h3&gt;

&lt;p&gt;It turns out that ePUB3 (the eBook format that we are targeting) uses the XHTML markup standard, so we want to do the same from the beginning of our learning about these things. HTML5 is just too &lt;em&gt;loose&lt;/em&gt; for out requirements.&lt;/p&gt;

&lt;h2 id=&quot;epub&quot;&gt;ePub&lt;/h2&gt;

&lt;p&gt;The ePub standard for delivering eBooks is a wrapped-up package of files, consisting (mostly) of HTML and CSS, although, actually the HTML is a particular flavour; &lt;code class=&quot;highlighter-rouge&quot;&gt;XHTML5&lt;/code&gt;. This means that it must conform to a very strict set of rules.&lt;/p&gt;

&lt;p&gt;We can also validate the ePub by using an &lt;a href=&quot;http://validator.idpf.org&quot; title=&quot;Validate the ePub&quot; target=&quot;_blank&quot;&gt;online service at the IDPF web site&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However this is limited to 10MB and this is a serious limitation, so you may need to &lt;a href=&quot;https://github.com/IDPF/epubcheck/releases&quot; title=&quot;Grab the latest version&quot; target=&quot;_blank&quot;&gt;download a copy of ePubCheck&lt;/a&gt; (a java application) and run this locally through the terminal.&lt;/p&gt;

&lt;p&gt;With the Mac Terminal application open locate the ePubcheck file that you just downloaded and:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /Applications/Utilities/ebook_tools/epubcheck-4.0.2
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; pubcheck-4.0.2 &amp;lt;path to the ePub file&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You should see something like this:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; Validating using EPUB version 3.0.1 rules.
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; No errors or warnings detected.
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; epubcheck completed
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;All sorts of code will need validating and by &lt;a href=&quot;http://codebeautify.org&quot; title=&quot;This is very useful indeed&quot; target=&quot;_blank&quot;&gt;going to CodeBeautify&lt;/a&gt; you are bound to find exactly what you need.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Chris Colyer’s Website is the &lt;a href=&quot;https://css-tricks.com/snippets/css/browser-specific-hacks/&quot; title=&quot;Off to the web&quot; target=&quot;_blank&quot;&gt;goto place&lt;/a&gt; for browser hacks: &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Vertical Spacing for text: pBook and eBook</title>
   <link href="http://localhost:4000/indesign/typography/2017/02/04/vertical-spacing/"/>
   <updated>2017-02-04T22:50:00+00:00</updated>
   <id>http://localhost:4000/indesign/typography/2017/02/04/vertical-spacing</id>
   <content type="html">&lt;p&gt;When we choose a value for &lt;em&gt;leading&lt;/em&gt; in InDesign, we are actually defining the distance between the baselines. The more traditional definition of leading is the space between the baseline and top of character container; the term coming from the little slabs of lead put between the type.&lt;/p&gt;

&lt;h2 id=&quot;baseline-grid-or-doing-the-maths&quot;&gt;Baseline Grid or Doing the maths?&lt;/h2&gt;
&lt;p&gt;InDesign has a super useful feature in paragraph styles; &lt;em&gt;Align to Grid&lt;/em&gt;.
If you set this up correctly for your body text, then you will be guaranteed to get the lines of text to align across the spine and to ‘back up’ through the paper. Where the paper has any transparency at all, the lines of the body text should coincide back to back.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017/01/baseline.png&quot;&gt;&lt;img src=&quot;/images/2017/01/baseline.png&quot; alt=&quot;Here we see the baseline&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Text should always align across the spine of a double page spread, whether for print or eBook. In print, text should also align where columns are used. To be be more specific, the main text or body text must align to an imaginary baseline across the spread. In print the lines of text should coincide through the page when held up to the light.&lt;/p&gt;

&lt;p&gt;InDesign can help control this through the ‘align to grid’ in the paragraph style settings, however care must be taken with this method since it may not achieve the desired result for a double page view for a &lt;strong&gt;reflowable&lt;/strong&gt; eBook.&lt;/p&gt;

&lt;h2 id=&quot;so-how-can-we-get-the-correct-alignment-for-both-pbook-and-ebook&quot;&gt;So how can we get the correct alignment for both pBook and eBook?&lt;/h2&gt;

&lt;p&gt;If a text consisted entirely of body text with no headings or sub headings then no problem exists in making both sides of the spine align, as long as the space between the paragraphs is either nothing or a multiple of the body text leading. All you will need is the text to start from the same position both &lt;em&gt;verso&lt;/em&gt; and &lt;em&gt;recto&lt;/em&gt; and alignment is achieved. The problem arises when the text is punctuated with other blocks of text for the headings, sub-headings or block quotes, or – you separate the paragraphs with a dimension that is not a multiple of the &lt;em&gt;body text leading&lt;/em&gt;. If we are only dealing with print, then you can forget about aligning the headings to this grid, because the body text paragraphs will get back into alignment after the heading.&lt;/p&gt;

&lt;p&gt;Since your type sizes and leading will use points (pts) then you can set the vertical units in InDesign’s preferences to &lt;code class=&quot;highlighter-rouge&quot;&gt;pts&lt;/code&gt; also. This will then give you the benefit of being able to ensure that all vertical dimensions follow a multiple of the body text leading. &lt;strong&gt;But beware.&lt;/strong&gt; You don’t want to set your preferences generally to use points for vertical units because you cannot (easily) set the page dimensions with points; for this you really need millimetres. So the &lt;em&gt;trick is to set the vertical units to points &lt;strong&gt;after&lt;/strong&gt; you have started the document&lt;/em&gt; and set the paper size and the margins.&lt;/p&gt;

&lt;p&gt;You will see from the first images here that we can interrupt the flow of the body text with sub headings or blockquotes that are not aligned to the baseline grid, and are positioned with space-before. The body text goes back to the grid after the heading or blockquote.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/bodytextalignedtogrid.png&quot;&gt;&lt;img src=&quot;/images/bodytextalignedtogrid.png&quot; alt=&quot;Body text is aligned to the grid&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Our body text uses 13pts leading so the space taken up by the subhead is 26pts, thus keeping the text aligned.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;what-about-the-reflowable-ebook&quot;&gt;What about the reflowable eBook?&lt;/h2&gt;

&lt;p&gt;InDesign can help us by providing this ‘align to grid’ feature, but eBooks (being HTML and CSS) do &lt;strong&gt;not&lt;/strong&gt; understand ‘align to grid’. eBooks need to use ‘line-height’ (leading) and margins to achieve this vertical alignment. In transferring vertical spacing from InDesign to the eBook export, leading becomes line-height and space-before and space-after becomes margin-bottom and margin-top in the CSS.&lt;/p&gt;

&lt;h3 id=&quot;maths-but-dont-panic&quot;&gt;Maths, but don’t panic.&lt;/h3&gt;

&lt;p&gt;Getting the alignment correct for the body text will involve some maths and a consideration of vertical units.&lt;/p&gt;

&lt;p&gt;The first problem that we encounter with &lt;em&gt;InDesign&lt;/em&gt; is the units in use. Type is measured in points, whereas other dimensions (vertical and horizontal) are measured in more worldly units such as millimetres or inches. Since 1 point measures 0.352777778 millimetres, we don’t want to have to keep making this conversion!&lt;/p&gt;

&lt;p&gt;The vertical position of the lines of text are dependent on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;type size (font-size)&lt;/li&gt;
  &lt;li&gt;the leading (line-height)&lt;/li&gt;
  &lt;li&gt;space before the paragraph (margin-top)&lt;/li&gt;
  &lt;li&gt;space after the paragraph (margin-bottom)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the brackets at the end of these lines, we reveal what CSS in the ePub package is used to control the vertical space.&lt;/p&gt;

&lt;h2 id=&quot;in-the-reflowable-ebook&quot;&gt;In the reflowable eBook&lt;/h2&gt;

&lt;h3 id=&quot;the-body-text&quot;&gt;The body text&lt;/h3&gt;

&lt;p&gt;In the above illustration you see the baseline grid. In this InDesign example, this is set to 13.606 pt. An odd number, yes, but this is because it is set to be an exact 30th of the text block height; this is what the designer wants for print. When we are taking this to the reflowable ePub, the grid is ignored but the leading is not, so, we need to set the leading to something near to this baseline grid setting (13pt).&lt;/p&gt;

&lt;h3 id=&quot;other-block-level-elements&quot;&gt;Other block level elements&lt;/h3&gt;

&lt;p&gt;Headings and blockquotes are going to interrupt this vertical alignment, so we need to make sure that these elements use vertical space that is a multiple of the body text leading.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Say we have a sub heading that breaks the flow of the body text. We need to add together the space-before and space-after with the leading to get a multiple of the body-text leading.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Our sub heading could have a font size of 16pts with leading of 17.5pts
The space-before could be 6pts and the space-after 2.5pts. This then computes as follows:
17.5 + 2.5 + 6 = 26 - which a multiple of 13&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With this calculation, our body text should be back in alignment after the heading.&lt;/p&gt;

&lt;h2 id=&quot;what-about-images-in-the-text&quot;&gt;What about images in the text?&lt;/h2&gt;

&lt;p&gt;If we introduce an illustration that has text &lt;strong&gt;before&lt;/strong&gt; and &lt;strong&gt;after&lt;/strong&gt;, then this will upset the vertical alignment of the body text, unless we can size the vertical dimension of the image with a multiple of the leading.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Just to clarify&lt;/strong&gt;: InDesign will sort this out for print, because the body text will come back to the baseline grid, after these interruptions. But in the eBook, we need to explicitly set the spacing for these ‘interruptions’ to bring things back to the alignment. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>HTML, XHTML, HTML5 or XHTML5</title>
   <link href="http://localhost:4000/html/2017/02/03/htmlORxhtml/"/>
   <updated>2017-02-03T11:00:00+00:00</updated>
   <id>http://localhost:4000/html/2017/02/03/htmlORxhtml</id>
   <content type="html">&lt;p&gt;Goodness me there seem to be so many flavours of HTML. What does this all mean for eBook production and why should we care?&lt;/p&gt;

&lt;h2 id=&quot;so-you-thought-it-was-just-html&quot;&gt;So you thought it was just ‘HTML’!&lt;/h2&gt;

&lt;p&gt;HTML5 is the newest version of HTML and is very ‘loose’ and forgiving. In fact when you create HTML5 markup you do not need to close the tags.&lt;/p&gt;

&lt;p&gt;For example this is acceptable in HTML5:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;This is a heading
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a paragraph
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;eBooks made to ePub3 standard use HTML but the markup is very strict. In fact the markup should conform to &lt;code class=&quot;highlighter-rouge&quot;&gt;XML&lt;/code&gt; standards and this means that the format is actually &lt;code class=&quot;highlighter-rouge&quot;&gt;XHTML5&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For the above markup snippet to conform to &lt;code class=&quot;highlighter-rouge&quot;&gt;XHTML&lt;/code&gt; (and thus ePub3) it would need to be:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;This is a heading&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a paragraph&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to validate XHTML you need to name the file with the XHTML extension; thus &lt;code class=&quot;highlighter-rouge&quot;&gt;recipe.xhtml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There are also some very specific items that need to go at the head of an XHTML file. Here are the required items:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/xhtml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
and so on
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, although the doctype is &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt;, the namespace (&lt;code class=&quot;highlighter-rouge&quot;&gt;xmlns&lt;/code&gt;) is using the one from the World Wide Web consortium for &lt;code class=&quot;highlighter-rouge&quot;&gt;xhtml&lt;/code&gt;.&lt;/p&gt;
</content>
 </entry>
 

</feed>
